const http = require('http')
const { JolocomLib, claimsMetadata } = require('jolocom-lib')
const { token } = require('./token.js')

/**
  Replace the user id with the one randomly generated by the demo application.
  You should be able to find it in the logs after starting the service, denoted as:
  '[DEBUG] : JWT for [USER_ID] : eyJ0eXAi...'
*/

const randomUserId = 'o1acb'

/**
 * Defining a mock identity to authenticate as
 */

const seed = Buffer.from('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'hex')
const password = 'secret'

/**
 * @description Generates a valid credential response given a encoded response, and a session id
 * @param {string} requestJWT - Base64 encoded credential request JSON Web Token
 * @returns {Promise<string>} - Base64 encoded credential response
 */

const generateResponse = async requestJWT => {
  const vault = new JolocomLib.keyProvider(seed, password)
  const registry = JolocomLib.registries.jolocom.create()

  const identityWallet = await registry.authenticate(vault, {
    derivationPath: JolocomLib.KeyTypes.jolocomIdentityKey,
    encryptionPass: password
  })

  const credential = await identityWallet.create.signedCredential(
    {
      metadata: claimsMetadata.name,
      claim: {
        givenName: 'Topsy',
        familyName: 'Cret'
      },
      subject: identityWallet.did
    },
    password
  )

  const request = JolocomLib.parse.interactionToken.fromJWT(requestJWT)
  const response = await identityWallet.create.interactionTokens.response.share(
    {
      callbackURL: request.interactionToken.callbackURL,
      suppliedCredentials: [credential.toJSON()]
    },
    password,
    request
  )

  sendToken(response.encode())
}

/**
 * @description Helper function to post the JWT to the demo service
 * @param {string} responseJWT - Base64 encoded credential response JWT
 */

const sendToken = responseJWT => {
  const options = {
    hostname: 'localhost',
    port: 9000,
    path: `/authentication/${randomUserId}`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' }
  }

  const req = http.request(options, res => {
    res.setEncoding('utf8')
    res.on('data', body => {
      console.log('Body: ' + body)
    })
  })

  req.write(JSON.stringify({ token: responseJWT }))
  req.end()
}

generateResponse(token)
